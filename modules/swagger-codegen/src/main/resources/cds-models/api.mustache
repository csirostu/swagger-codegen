package {{apiPackage}};

import au.org.consumerdatastandards.support.*;
import au.org.consumerdatastandards.support.security.EndpointAuth;
import au.org.consumerdatastandards.support.security.EndpointAuthAccess;
import au.org.consumerdatastandards.support.security.EndpointAuthType;
import au.org.consumerdatastandards.api.common.ErrorResponse;
import au.org.consumerdatastandards.api.common.Scope;

import {{modelPackage}}.*;

{{#imports}}import {{import}};
{{/imports}}

{{#operations}}
public interface {{classname}}  {
{{#operation}}
    @Endpoint(
        path = "/{{{baseName}}}",
        summary = "{{ summary }}",
        description = "{{notes}}",
        requestMethod = RequestMethod.{{ httpMethod }},
        operationId = "{{nickname}}",
        responses = {
            @EndpointResponse(
                responseCode = ResponseCode.OK,
                description = "Successful response for {{nickname}}",
                content = {{returnBaseType}}{{^returnBaseType}}Void{{/returnBaseType}}.class
            ),
            @EndpointResponse(
                responseCode = ResponseCode.UNAUTHORIZED,
                description = "Authorization header missing or invalid token",
                content = ErrorResponse.class
            ),
            @EndpointResponse(
                responseCode = ResponseCode.FORBIDDEN,
                description = "Token has incorrect scope or a security policy was violated.",
                content = ErrorResponse.class
            )
        },
        requiredAuth = {
            @EndpointAuth(
                type = EndpointAuthType.CDS_FAPI,
                access = EndpointAuthAccess.READ_ONLY,
                scopes = {
                    Scope.COMMON_BASIC_CUSTOMER
                }
            )
        }
    )
    {{returnBaseType}}{{^returnBaseType}}Void{{/returnBaseType}} {{operationId}}();
   
{{/operation}}

{{/operations}}

